<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<!-- Definition~of pacman game -->
<gameDefinition>
	<!-- Renderer configuration -->
	<property key="rendererConfiguration" value="/context/pacmanAsciiRendererConfiguration.xml" />
	<!-- Timeout configuration in milliseconds. Set to -1 for no \timeout -->
	<property key="timeout" value="20000" />
	<layout>
		<component id="gameInfoTop" location="top">
			<contextProperty id="score" />
			<contextProperty id="hiScore" />
		</component>

		<component id="gameInfoDown" location="bottom">
			<contextProperty id="lives" />
			<contextProperty id="playerItems" />
		</component>
	</layout>
	<!-- XVGDL allows define controls that can be overriden whithin controls tag In case of Pacman, no~fire, jump or special control is defined
-->
	<controls>
		<control left="27" right="26" up="24" down="25" />
	</controls>
	<map type="2D" sizeX="20" sizeY="40" toroidal="false" generator="es.jor.phd.xvgdl.model.map.RandomLocationGameMapGenerator">
J. R. Quiñones, A. J. Fernández-Leiva: XVGDL
	</map>
	<players number="1" maxNumber="1" minNumber="1">
		<player name="pacman" score="0" lives="3" livePercentage="100"/>
	</players>
	<objects>
		<object name="wall" type="wall" dynamic="false" volatile="false" />
		<object name="ghost" type="enemy" dynamic="true" volatile="true" ai="chase_player" />
		<object name="ghost" type="enemy" dynamic="true" volatile="true" sizeX="1" sizeY="1" size="1,1" instances="2" ai="random_movement" />
		<object name="smallDot" type="item" dynamic="true" volatile="true" size="1,1" instances="2" />
		<object name="bigDot" type="item" dynamic="true" volatile="true" size="1,1" instances="2" />
		<object name="cherry" type="item" dynamic="true" volatile="true" size="1,1" instances="1" />
	</objects>
	<events>
		<event type="engine" className="es.jor.phd.xvgdl.model.event.SpawnItemEvent" objectName="cherry" timer="5000" />
		<event type="engine" className="es.jor.phd.xvgdl.model.event.SpawnItemEvent" objectName="ghost" timer="1000" />
	</events>
	<rules>
		<rule name="eatSmallDot" type="collision">
			<ruleAction objectName="pacman" result="score-up" value="100" />
			<ruleAction objectName="smallDot" result="disappear" />
		</rule>
		<rule name="eatBigDot" type="collision">
			<ruleAction objectName="pacman" result="score-up" value="300" />
			<ruleAction objectName="bigDot" result="disappear" />
		</rule>
		<rule name="eatCherry" type="collision">
			<ruleAction objectName="pacman" result="game-state-transition" value="pacmanPowerUp" />
			<ruleAction objectName="cherry" result="disappear" />
		</rule>
		<rule name="ghostCatchPacman" type="collision">
			<ruleAction objectName="pacman" result="teletransport" />
			<ruleAction objectName="ghost" result="" />
		</rule>
	</rules>
	<endConditions>
		<endCondition checkerClass="es.jor.phd.xvgdl.model.endcondition.TimeoutGameEndCondition" property="timeout" value="0" />
		<endCondition checkerClass="es.jor.phd.xvgdl.model.endcondition.NoObjectsPresentGameEndCondition" objectNames="bigDot,smallDot" winningCondition="true"/>
		<endCondition checkerClass="es.jor.phd.xvgdl.model.endcondition.LivesZeroGameEndCondition" />
	</endConditions>
	<gameState id="pacmanPowerUp">
		<rules>
			<!-- Overrides rule for ghostCachPacman -->
			<rule name="ghostCatchPacman" type="collision">
				<ruleAction objectName="pacman" result="score-up" value="500" />
				<ruleAction objectName="ghost" result="disappear" />
			</rule>
		</rules>
		<events>
			<event type="engine" result="game-state-reset" timer="10000" />
		</events>
	</gameState>
</gameDefinition>